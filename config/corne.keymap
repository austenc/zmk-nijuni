/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LOWER 1
#define RAISE 2

#define ZRES LG(N0)
#define ZIN LG(EQUAL)
#define ZOUT LG(MINUS)
#define RENT RAISE RET
#define ESCC LCTRL ESC
#define LSPO LSHFT LPAR
#define RSPC RSHFT RPAR


// PHP aliases
// #define SARR MINUS GT
// #define DARR EQUAL GT


/ {
        macros {
            single_arrow: single_arrow {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                    = <&macro_press &kp MINUS>
                    , <&macro_press &kp GT>
                    ;
            };
            double_arrow: double_arrow {

                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                    = <&macro_press &kp EQUAL>
                    , <&macro_press &kp GT>
                    ;
            };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
// | ------- | ------- | ------- | ------- | ------- | ------- |    | ------- | ------- | ------- | ------- | ------- | ------- |
     &kp TAB    &kp Q     &kp W     &kp E     &kp R     &kp T          &kp Y     &kp U     &kp I     &kp O     &kp P    &kp BSLH
// | ------- | ------- | ------- | ------- | ------- | ------- |    | ------- | ------- | ------- | ------- | ------- | ------- |
    &kp ESCC    &kp A     &kp S     &kp D     &kp F     &kp G          &kp H     &kp J     &kp K     &kp L   &kp SEMI   &kp SQT
// | ------- | ------- | ------- | ------- | ------- | ------- |    | ------- | ------- | ------- | ------- | ------- | ------- |
    &mt LSHFT LPAR &kp Z &kp X &kp C &kp V &kp B  &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt LSHFT RPAR
// | ------- | ------- | ------- | ------- | ------- | ------- |    | ------- | ------- | ------- | ------- | ------- | ------- |
                                  &kp LALT &lt 1 BSPC &kp LGUI       &kp SPACE &lt RENT &mo 1
                        >;
                };
                lower_layer {
                        bindings = <
   &kp GRAVE  &kp N1  &kp N2 &kp N3  &kp N4  &kp N5     &kp N6    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp N0 &kp MINUS
   &trans     &trans  &trans &single_arrow  &double_arrow  &kp LBKT   &kp RBKT  &kp KP_N4 &kp KP_N5 &kp KP_N6 &trans &kp K_VOL_UP
   &trans     &trans  &trans &trans  &trans  &kp LBRC   &kp RBRC  &kp KP_N1 &kp KP_N2 &kp KP_N3 &trans &kp K_VOL_DN
                               &trans  &trans  &trans   &trans    &mo 2     &lt 1 KP_N0
                        >;
                };

                raise_layer {
                        bindings = <
   &kp GRAVE  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT     &kp HOME  &kp PG_DN  &kp PG_UP &kp END   &trans   &trans
   &kp LCTRL &trans   &trans &trans   &trans   &kp LBKT      &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT &trans   &trans
   &kp LSHFT &trans   &trans &trans   &trans   &kp LBRC      &kp ZRES  &kp ZOUT   &kp ZIN   &kp RBRC  &kp PIPE &kp TILDE
                             &trans   &kp DEL  &trans        &trans    &trans    &kp K_MUTE
                        >;
                };
        };
};
